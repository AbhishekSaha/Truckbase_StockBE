openapi: 3.0.0
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: http://localhost:3000
  - url: ws://localhost:3000
paths:
  /ticker:
    get:
      description: WebSocket Stock Ticker
      responses:
        default:
          description: Success
  /user/{id}:
    get:
      description: Get User from DB
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete User from DB
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/update_watch_list/{id}:
    put:
      description: Update User watch_list from DB
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockTicker'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    post:
      description: Create User and add to DB
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Get All {User.id, User.name} from DB
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: cursor
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      required:
        - id
        - name
        - email
        - watch_list
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        watch_list:
          type: array
          items:
            type: string
    PaginationModel:
      properties:
        pageSize:
          type: integer
          format: int32
        startingCursor:
          type: integer
          format: int32
          minimum: 1
    StockTicker:
      required:
        - ticker
      properties:
        ticker:
          type: string
        update_type:
          type: string
          enum:
            - add
            - remove
          default: add
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string
